//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace VL.ItsMe1110.SubjectBlogService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SubjectBlogService.ISubjectBlogService")]
    public interface ISubjectBlogService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFServiceNode/CheckAlive", ReplyAction="http://tempuri.org/IWCFServiceNode/CheckAliveResponse")]
        bool CheckAlive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFServiceNode/CheckAlive", ReplyAction="http://tempuri.org/IWCFServiceNode/CheckAliveResponse")]
        System.Threading.Tasks.Task<bool> CheckAliveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFServiceNode/CheckNodeReferences", ReplyAction="http://tempuri.org/IWCFServiceNode/CheckNodeReferencesResponse")]
        VL.Common.Core.Protocol.DependencyResult CheckNodeReferences();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFServiceNode/CheckNodeReferences", ReplyAction="http://tempuri.org/IWCFServiceNode/CheckNodeReferencesResponse")]
        System.Threading.Tasks.Task<VL.Common.Core.Protocol.DependencyResult> CheckNodeReferencesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubjectBlogService/EditBlog", ReplyAction="http://tempuri.org/ISubjectBlogService/EditBlogResponse")]
        VL.Common.Core.Protocol.Report EditBlog(VL.Common.Core.Object.VL.Blog.TBlog blog, string content, System.Collections.Generic.List<string> addTags, System.Collections.Generic.List<string> deleteTags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubjectBlogService/EditBlog", ReplyAction="http://tempuri.org/ISubjectBlogService/EditBlogResponse")]
        System.Threading.Tasks.Task<VL.Common.Core.Protocol.Report> EditBlogAsync(VL.Common.Core.Object.VL.Blog.TBlog blog, string content, System.Collections.Generic.List<string> addTags, System.Collections.Generic.List<string> deleteTags);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubjectBlogService/ChangeVisibility", ReplyAction="http://tempuri.org/ISubjectBlogService/ChangeVisibilityResponse")]
        VL.Common.Core.Protocol.Report ChangeVisibility(System.Guid blogId, bool isVisible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubjectBlogService/ChangeVisibility", ReplyAction="http://tempuri.org/ISubjectBlogService/ChangeVisibilityResponse")]
        System.Threading.Tasks.Task<VL.Common.Core.Protocol.Report> ChangeVisibilityAsync(System.Guid blogId, bool isVisible);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISubjectBlogServiceChannel : VL.ItsMe1110.SubjectBlogService.ISubjectBlogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubjectBlogServiceClient : System.ServiceModel.ClientBase<VL.ItsMe1110.SubjectBlogService.ISubjectBlogService>, VL.ItsMe1110.SubjectBlogService.ISubjectBlogService {
        
        public SubjectBlogServiceClient() {
        }
        
        public SubjectBlogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SubjectBlogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubjectBlogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubjectBlogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CheckAlive() {
            return base.Channel.CheckAlive();
        }
        
        public System.Threading.Tasks.Task<bool> CheckAliveAsync() {
            return base.Channel.CheckAliveAsync();
        }
        
        public VL.Common.Core.Protocol.DependencyResult CheckNodeReferences() {
            return base.Channel.CheckNodeReferences();
        }
        
        public System.Threading.Tasks.Task<VL.Common.Core.Protocol.DependencyResult> CheckNodeReferencesAsync() {
            return base.Channel.CheckNodeReferencesAsync();
        }
        
        public VL.Common.Core.Protocol.Report EditBlog(VL.Common.Core.Object.VL.Blog.TBlog blog, string content, System.Collections.Generic.List<string> addTags, System.Collections.Generic.List<string> deleteTags) {
            return base.Channel.EditBlog(blog, content, addTags, deleteTags);
        }
        
        public System.Threading.Tasks.Task<VL.Common.Core.Protocol.Report> EditBlogAsync(VL.Common.Core.Object.VL.Blog.TBlog blog, string content, System.Collections.Generic.List<string> addTags, System.Collections.Generic.List<string> deleteTags) {
            return base.Channel.EditBlogAsync(blog, content, addTags, deleteTags);
        }
        
        public VL.Common.Core.Protocol.Report ChangeVisibility(System.Guid blogId, bool isVisible) {
            return base.Channel.ChangeVisibility(blogId, isVisible);
        }
        
        public System.Threading.Tasks.Task<VL.Common.Core.Protocol.Report> ChangeVisibilityAsync(System.Guid blogId, bool isVisible) {
            return base.Channel.ChangeVisibilityAsync(blogId, isVisible);
        }
    }
}
